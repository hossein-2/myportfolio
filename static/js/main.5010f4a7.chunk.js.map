{"version":3,"sources":["components/Header.js","components/ToDoObject.js","styles/CardContainer.js","components/ToDo.js","App.js","serviceWorker.js","index.js"],"names":["Header","Navbar","bg","variant","expand","Brand","style","marginLeft","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","ToDoObject","onDoneClick","props","doneClickHandler","onDeleteClick","deleteCLickHandler","this","doe","title","completed","Fragment","doundo","color","cursor","float","onClick","marginRight","Component","border","subject","children","ToDo","state","todos","userId","loading","errors","deleteSubject","filteredTodos","filter","setState","doneSubject","mappedTodos","map","unDoneSubject","handleAddUser","e","preventDefault","newTodos","Math","random","handleChange","target","value","handleCheckboxChange","checked","axios","get","res","data","CardContainer","onSubmit","htmlFor","classnames","type","name","placeholder","onChange","error","key","bind","App","basename","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5010f4a7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"sm\">\r\n      <Navbar.Brand style={{ marginLeft: \"1rem\" }} href=\"/\">\r\n        Hossein 2\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"/\">Resume</Nav.Link>\r\n          <Nav.Link href=\"/ \">About</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"../index.css\";\r\n\r\nclass ToDoObject extends Component {\r\n  onDoneClick = () => {\r\n    this.props.doneClickHandler();\r\n  };\r\n  onDeleteClick = () => {\r\n    this.props.deleteCLickHandler();\r\n  };\r\n  render() {\r\n    const { title, id, completed } = this.props.doe;\r\n    return (\r\n      <React.Fragment>\r\n        <ul className=\"list-group mb-2\">\r\n          <li className=\"list-group-item\">\r\n            {title}\r\n            <i\r\n              className={`fas ${this.props.doundo} fa-lg ${this.props.color}`}\r\n              style={{\r\n                cursor: \"pointer\",\r\n                float: \"right\"\r\n              }}\r\n              onClick={this.onDoneClick}\r\n            />\r\n            <i\r\n              className=\"fas fa-times fa-lg\"\r\n              style={{\r\n                cursor: \"pointer\",\r\n                float: \"right\",\r\n                color: \"red\",\r\n                marginRight: \"0.5rem\"\r\n              }}\r\n              onClick={this.onDeleteClick}\r\n            />\r\n          </li>\r\n        </ul>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDoObject;\r\n","import React, { Component } from \"react\";\r\n\r\nfunction ToDoObject(props) {\r\n  return (\r\n    <div className={`card ${props.border} mb-3`}>\r\n      <div className={`card-header h5 ${props.bg} `}>{props.subject}</div>\r\n      <div className=\"card-body text-dark\">{props.children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoObject;\r\n","import React, { Component } from \"react\";\r\nimport ToDoObject from \"./ToDoObject\";\r\nimport axios from \"axios\";\r\nimport CardContainer from \"../styles/CardContainer\";\r\nimport \"../index.css\";\r\nimport classnames from \"classnames\";\r\n\r\nclass ToDo extends Component {\r\n  state = {\r\n    todos: [],\r\n    userId: \"\",\r\n    loading: true,\r\n    title: \"\",\r\n    completed: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/todos\");\r\n    this.setState({ todos: res.data, loading: false });\r\n  }\r\n\r\n  deleteSubject = id => {\r\n    const { todos } = this.state;\r\n    const filteredTodos = todos.filter(doe => doe.id !== id);\r\n    this.setState({ todos: filteredTodos });\r\n  };\r\n\r\n  doneSubject = id => {\r\n    const { todos } = this.state;\r\n    const mappedTodos = todos.map(doe =>\r\n      doe.id === id ? { ...doe, completed: !doe.completed } : doe\r\n    );\r\n    this.setState({ todos: mappedTodos });\r\n  };\r\n\r\n  unDoneSubject = id => {\r\n    const { todos } = this.state;\r\n    const mappedTodos = todos.map(doe =>\r\n      doe.id === id ? { ...doe, completed: !doe.completed } : doe\r\n    );\r\n    this.setState({ todos: mappedTodos });\r\n  };\r\n\r\n  handleAddUser = e => {\r\n    e.preventDefault();\r\n\r\n    const { todos, title, completed } = this.state;\r\n    if (title === \"\") {\r\n      this.setState({ errors: { title: \"Name is required\" } });\r\n      return;\r\n    }\r\n    const doe = { id: Math.random(), title, completed };\r\n    const newTodos = [doe, ...todos];\r\n    this.setState({ todos: newTodos });\r\n    this.setState({ title: \"\" });\r\n  };\r\n  handleChange = e => {\r\n    this.setState({ title: e.target.value });\r\n  };\r\n\r\n  handleCheckboxChange = e => {\r\n    this.setState({ completed: e.target.checked });\r\n  };\r\n  render() {\r\n    const { todos, loading, errors, title, completed } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <CardContainer subject=\"Enter New Duty\" border=\"border-dark\" bg=\"\">\r\n          <form onSubmit={this.handleAddUser}>\r\n            <div className=\"form-group \">\r\n              <label htmlFor=\"subject\">Subject</label>\r\n              <input\r\n                className={classnames(\"form-control form-control-sm  mb-1\", {\r\n                  \"is-invalid\": errors.title\r\n                })}\r\n                type=\"text\"\r\n                name=\"subject\"\r\n                placeholder=\"Enter The Subject\"\r\n                onChange={this.handleChange}\r\n                error={errors.title}\r\n                value={title}\r\n              />\r\n              {errors.title && (\r\n                <div className=\"invalid-feedback mb-1\">{errors.title}</div>\r\n              )}\r\n              <div className=\"form-group \">\r\n                <label\r\n                  style={{\r\n                    cursor: \"pointer\"\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"checkbox\"\r\n                    checked={completed}\r\n                    onChange={this.handleCheckboxChange}\r\n                  />\r\n                  <span style={{ marginLeft: 8 }}>completed</span>\r\n                </label>\r\n              </div>\r\n              <input type=\"submit\" className=\"btn  btn-dark\" value=\"Add Duty\" />\r\n            </div>\r\n          </form>\r\n        </CardContainer>\r\n        <CardContainer subject=\"To Do\" border=\"border-danger\" bg=\"bg-danger\">\r\n          {loading ? (\r\n            <h1>loading... </h1>\r\n          ) : (\r\n            todos.map(doe => {\r\n              const { id, completed } = doe;\r\n              return (\r\n                !doe.completed && (\r\n                  <ToDoObject\r\n                    doundo=\"fa-check\"\r\n                    color=\"fa-green\"\r\n                    key={doe.id}\r\n                    doe={doe}\r\n                    deleteCLickHandler={this.deleteSubject.bind(this, id)}\r\n                    doneClickHandler={this.doneSubject.bind(this, id)}\r\n                  />\r\n                )\r\n              );\r\n            })\r\n          )}\r\n        </CardContainer>\r\n        <CardContainer\r\n          subject=\"Works Done\"\r\n          border=\"border-success\"\r\n          bg=\"bg-success\"\r\n        >\r\n          {\" \"}\r\n          {loading ? (\r\n            <h1>loading... </h1>\r\n          ) : (\r\n            todos.map(doe => {\r\n              const { id } = doe;\r\n              return (\r\n                doe.completed && (\r\n                  <ToDoObject\r\n                    color=\"fa-blue\"\r\n                    doundo=\"fa-undo\"\r\n                    key={doe.id}\r\n                    doe={doe}\r\n                    deleteCLickHandler={this.deleteSubject.bind(this, id)}\r\n                    doneClickHandler={this.unDoneSubject.bind(this, id)}\r\n                  />\r\n                )\r\n              );\r\n            })\r\n          )}\r\n        </CardContainer>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDo;\r\n","import React from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport ToDo from \"./components/ToDo\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename=\"/myportfolio\">\r\n      <div className=\"App\">\r\n        <Header />\r\n        <div className=\"container mt-3\">\r\n          <ToDo />\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}